{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.1.0",
    "description": "CRUD for posts with likes and comments. Dates use YYYY-MM-DD (1900-01-01 .. 2100-12-31)."
  },
  "host": "localhost:5002",
  "basePath": "/",
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "tags": [
    { "name": "Health", "description": "Service health" },
    { "name": "Post", "description": "Post CRUD & listing" },
    { "name": "Like", "description": "Post likes" },
    { "name": "Comment", "description": "Post comments" }
  ],

  "paths": {
    "/api/health": {
      "get": {
        "tags": ["Health"],
        "summary": "Health check",
        "responses": {
          "200": { "description": "OK", "schema": { "$ref": "#/definitions/Health" } }
        }
      }
    },

    "/api/posts": {
      "get": {
        "tags": ["Post"],
        "summary": "List all posts",
        "responses": {
          "200": {
            "description": "Array of posts",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Post" } }
          }
        }
      },
      "post": {
        "tags": ["Post"],
        "summary": "Create a post",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/PostCreate" }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": { "type": "string", "description": "URL of the created post" }
            },
            "schema": { "$ref": "#/definitions/Post" }
          },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/Error" } },
          "415": { "description": "Unsupported Media Type", "schema": { "$ref": "#/definitions/Error" } }
        }
      }
    },

    "/api/posts/{id}": {
      "get": {
        "tags": ["Post"],
        "summary": "Get a post by ID",
        "parameters": [{ "$ref": "#/parameters/PostIdParam" }],
        "responses": {
          "200": { "description": "Post", "schema": { "$ref": "#/definitions/Post" } },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } }
        }
      },
      "put": {
        "tags": ["Post"],
        "summary": "Update a post (partial fields allowed)",
        "parameters": [
          { "$ref": "#/parameters/PostIdParam" },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/PostUpdate" }
          }
        ],
        "responses": {
          "200": { "description": "Updated", "schema": { "$ref": "#/definitions/Post" } },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/Error" } },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } },
          "415": { "description": "Unsupported Media Type", "schema": { "$ref": "#/definitions/Error" } }
        }
      },
      "delete": {
        "tags": ["Post"],
        "summary": "Delete a post",
        "parameters": [{ "$ref": "#/parameters/PostIdParam" }],
        "responses": {
          "200": { "description": "Deleted", "schema": { "$ref": "#/definitions/Message" } },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } }
        }
      }
    },

    "/api/posts/{id}/like": {
      "post": {
        "tags": ["Like"],
        "summary": "Increment like counter",
        "parameters": [{ "$ref": "#/parameters/PostIdParam" }],
        "responses": {
          "200": {
            "description": "New like count",
            "schema": { "$ref": "#/definitions/LikeResult" }
          },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } }
        }
      }
    },

    "/api/posts/{id}/comments": {
      "get": {
        "tags": ["Comment"],
        "summary": "List comments for a post",
        "parameters": [{ "$ref": "#/parameters/PostIdParam" }],
        "responses": {
          "200": {
            "description": "Array of comments",
            "schema": { "type": "array", "items": { "$ref": "#/definitions/Comment" } }
          },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } }
        }
      },
      "post": {
        "tags": ["Comment"],
        "summary": "Add a comment to a post",
        "parameters": [
          { "$ref": "#/parameters/PostIdParam" },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": { "$ref": "#/definitions/CommentCreate" }
          }
        ],
        "responses": {
          "201": { "description": "Created", "schema": { "$ref": "#/definitions/Comment" } },
          "400": { "description": "Bad Request", "schema": { "$ref": "#/definitions/Error" } },
          "404": { "description": "Not Found", "schema": { "$ref": "#/definitions/Error" } },
          "415": { "description": "Unsupported Media Type", "schema": { "$ref": "#/definitions/Error" } }
        }
      }
    }
  },

  "parameters": {
    "PostIdParam": {
      "name": "id",
      "in": "path",
      "required": true,
      "type": "integer",
      "format": "int32",
      "minimum": 1,
      "description": "Post ID"
    }
  },

  "definitions": {
    "Health": {
      "type": "object",
      "properties": {
        "status": { "type": "string", "example": "ok" }
      }
    },

    "Message": {
      "type": "object",
      "properties": {
        "message": { "type": "string" }
      },
      "required": ["message"]
    },

    "Error": {
      "type": "object",
      "properties": {
        "message": { "type": "string" },
        "missing": {
          "type": "array",
          "items": { "type": "string" },
          "description": "Missing or invalid fields (when applicable)"
        }
      },
      "required": ["message"]
    },

    "Post": {
      "type": "object",
      "properties": {
        "id":       { "type": "integer", "format": "int32" },
        "title":    { "type": "string",  "example": "My Post" },
        "content":  { "type": "string",  "example": "Hello world" },
        "author":   { "type": "string",  "example": "Alice" },
        "date":     { "type": "string",  "example": "2025-09-28", "description": "YYYY-MM-DD" },
        "likes":    { "type": "integer", "format": "int32", "example": 0 },
        "comments": {
          "type": "array",
          "items": { "$ref": "#/definitions/Comment" }
        }
      },
      "required": ["id", "title", "content", "author", "date", "likes", "comments"]
    },

    "PostCreate": {
      "type": "object",
      "properties": {
        "title":   { "type": "string", "example": "My Post" },
        "content": { "type": "string", "example": "Hello world" },
        "author":  { "type": "string", "example": "Alice" },
        "date":    { "type": "string", "example": "2025-09-28", "description": "YYYY-MM-DD (1900..2100)" }
      },
      "required": ["title", "content", "author", "date"]
    },

    "PostUpdate": {
      "type": "object",
      "properties": {
        "title":   { "type": "string" },
        "content": { "type": "string" },
        "author":  { "type": "string" },
        "date":    { "type": "string", "description": "YYYY-MM-DD (1900..2100)" }
      }
    },

    "LikeResult": {
      "type": "object",
      "properties": {
        "id":    { "type": "integer", "format": "int32" },
        "likes": { "type": "integer", "format": "int32" }
      },
      "required": ["id", "likes"]
    },

    "Comment": {
      "type": "object",
      "properties": {
        "id":     { "type": "integer", "format": "int32" },
        "author": { "type": "string", "example": "Bob" },
        "text":   { "type": "string", "example": "Nice post!" },
        "date":   { "type": "string", "example": "2025-09-28", "description": "YYYY-MM-DD (server-set)" }
      },
      "required": ["id", "author", "text", "date"]
    },

    "CommentCreate": {
      "type": "object",
      "properties": {
        "author": { "type": "string", "example": "Bob" },
        "text":   { "type": "string", "example": "Nice post!" }
      },
      "required": ["author", "text"]
    }
  }
}